{"version":3,"sources":["state.tsx","App.tsx","index.tsx","app.module.scss"],"names":["sleep","milliseconds","Promise","resolve","setTimeout","allQuotesSelector","selector","key","get","a","fetch","response","json","body","QuoteBox","allQuotes","useRecoilValue","newQuote","useCallback","rand","Math","floor","random","length","useState","quote","setQuote","handleNewQuote","className","styles","quoteBody","quoteText","author","buttonContainer","button","onClick","window","location","assign","App","quoteContainer","title","fallback","loading","Source","source","href","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"sNAQMA,EAAQ,SAACC,GACb,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAGvCI,EAAoBC,YAAkB,CACjDC,IAAK,YACLC,IAAI,WAAD,4BAAE,8BAAAC,EAAA,sEACoBC,MACrB,0IAFC,cACGC,EADH,gBAIgBA,EAASC,OAJzB,cAIGC,EAJH,gBAKGb,EAAM,KALT,gCAMIa,EAAI,QANR,2CAAF,kDAAC,K,OCEN,SAASC,IACP,IAAMC,EAAYC,YAAeX,GAE3BY,EAAWC,uBAAY,WAC3B,IAAIC,EAAOC,KAAKC,MAAMD,KAAKE,SAAWP,EAAUQ,QAC9C,OAAOR,EAAUI,KAClB,CAACJ,IANc,EAQQS,mBAAgBP,KARxB,mBAQXQ,EARW,KAQJC,EARI,KAcZC,EAAiBT,uBAAY,WACjCQ,EAAST,OACR,CAACS,EAAUT,IAEd,OACE,sBAAKW,UAAWC,IAAOC,UAAvB,UACE,sBAAKF,UAAWC,IAAOE,UAAvB,UACGN,EAAMA,MACP,qCAAQA,EAAMO,aAEhB,sBAAKJ,UAAWC,IAAOI,gBAAvB,UACE,wBAAQL,UAAWC,IAAOK,OAAQC,QAfxB,WACdC,OAAOC,SAASC,OAAO,yCAA2Cb,EAAMA,MAAQ,SAAWA,EAAMO,SAc7F,mBAGA,wBAAQJ,UAAWC,IAAOK,OAAQC,QAASR,EAA3C,6BAQOY,MA/Cf,WACE,OACE,sBAAKX,UAAWC,IAAOW,eAAvB,UACE,sBAAMZ,UAAWC,IAAOY,MAAxB,kCACE,cAAC,WAAD,CAAUC,SAAU,sBAAMd,UAAWC,IAAOc,QAAxB,wBAApB,SACE,cAAC7B,EAAD,UCMV,SAAS8B,IACP,OACE,qBAAKhB,UAAWC,IAAOgB,OAAvB,SACE,mBAAGC,KAAK,0CAAR,sBAbNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAACL,EAAD,SAGNM,SAASC,eAAe,U,kBCZ1BC,EAAOC,QAAU,CAAC,OAAS,oBAAoB,eAAiB,4BAA4B,MAAQ,mBAAmB,QAAU,qBAAqB,QAAU,qBAAqB,UAAY,uBAAuB,OAAS,oBAAoB,UAAY,uBAAuB,gBAAkB,6BAA6B,OAAS,uB","file":"static/js/main.6b382eb9.chunk.js","sourcesContent":["import { selector } from \"recoil\";\n\n// List of quotes interface\nexport interface Quote {\n  quote: string;\n  author: string;\n}\n\nconst sleep = (milliseconds: number) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nexport const allQuotesSelector = selector<Quote[]>({\n  key: 'allQuotes',\n  get: async () => {\n    const response = await fetch(\n      \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n    );\n    const body = await response.json();\n    await sleep(1000)\n    return body[\"quotes\"];\n  },\n});\n","import React, { Suspense, useCallback, useState } from \"react\";\nimport { useRecoilValue} from \"recoil\";\nimport styles from \"./app.module.scss\";\nimport { allQuotesSelector, Quote } from \"./state\";\n\nfunction App() {\n  return (\n    <div className={styles.quoteContainer}>\n      <span className={styles.title}>Random Quote Machine</span>\n        <Suspense fallback={<span className={styles.loading}>Loading...</span>}>\n          <QuoteBox />\n        </Suspense>\n    </div>\n  );\n}\n\nfunction QuoteBox() {\n  const allQuotes = useRecoilValue(allQuotesSelector);\n\n  const newQuote = useCallback(():Quote => {\n    let rand = Math.floor(Math.random() * allQuotes.length);\n      return allQuotes[rand];\n  }, [allQuotes]);\n\n  const [quote, setQuote] = useState<Quote>(newQuote());\n  \n  const doTweet = () => {\n    window.location.assign('https://twitter.com/intent/tweet?text=' + quote.quote + \"\\r\\n -\" + quote.author);\n  };\n\n  const handleNewQuote = useCallback(() => {\n    setQuote(newQuote())\n  }, [setQuote, newQuote])\n\n  return (\n    <div className={styles.quoteBody}>\n      <div className={styles.quoteText}>\n        {quote.quote}\n        <div>- {quote.author}</div>\n      </div>\n      <div className={styles.buttonContainer}>\n        <button className={styles.button} onClick={doTweet}>\n          Tweet\n        </button>\n        <button className={styles.button} onClick={handleNewQuote}>\n          New Quote\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { RecoilRoot } from 'recoil';\nimport styles from './app.module.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n      <RecoilRoot>\n        <App />\n        <Source />\n      </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nfunction Source() {\n  return (\n    <div className={styles.source}>\n      <a href=\"https://github.com/pdkkid/quote-machine\">Source</a>\n    </div>\n  );\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"source\":\"app_source__2K6Xv\",\"quoteContainer\":\"app_quoteContainer__2sO-I\",\"title\":\"app_title__1tfK9\",\"loading\":\"app_loading__2vWBs\",\"fadeOut\":\"app_fadeOut__3bUBE\",\"quoteBody\":\"app_quoteBody__23e37\",\"fadeIn\":\"app_fadeIn__F1Y0H\",\"quoteText\":\"app_quoteText__tVvQi\",\"buttonContainer\":\"app_buttonContainer__26AGL\",\"button\":\"app_button__hx0oF\"};"],"sourceRoot":""}